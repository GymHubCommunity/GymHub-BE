plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.8'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Swagger 의존성
    // https://springdoc.org/#migrating-from-springfox
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Retry 의존성
    // https://www.baeldung.com/spring-retry
    implementation 'org.springframework.retry:spring-retry'

    // Faker 의존성
    // https://github.com/DiUS/java-faker
    implementation 'com.github.javafaker:javafaker:1.0.2'

    // WebClient 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // jwt 관련 의존성
    // https://github.com/jwtk/jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

sonar {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.organization', 'gymhubcommunity'
        property 'sonar.projectKey', 'GymHubCommunity_GymHub-BE'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}
